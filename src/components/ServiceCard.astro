---
interface Props {
  image: string;
  title: string;
  description: string;
  id?: string; // Add an optional ID for unique targeting
}
const { image, title, description, id } = Astro.props;
const uniqueId = id || `card-${Math.random().toString(36).substring(2, 9)}`;
---
<style>
  .card:hover,
  .card.is-hovering,
  .card.is-active {
    transform: scale(1.05);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25); /* Tailwind's shadow-2xl */
    z-index: 40;
  }
  /*
    Styles for the description content.
  */
  .card:hover .description-content,
  .card.is-hovering .description-content,
  .card.is-active .description-content {
    max-height: 24rem !important;
    opacity: 1 !important;
  }

  /*
    Styles for the image overlay.
  */
  .card:hover .bg-black,
  .card.is-hovering .bg-black,
  .card.is-active .bg-black {
    opacity: 0.4 !important;
  }
</style>
<div class="relative">
  <div
    class="card relative rounded-xl shadow-xl overflow-hidden
           transition-all duration-300 ease-in-out cursor-pointer"
    id={uniqueId}
    data-card-id={uniqueId} >
    <div
      class="image-area relative h-48 sm:h-56 bg-cover bg-center"
      style={`background-image: url('${image}');`}
      tabindex="0"
      role="button"
      aria-label={`Mostrar detalles de ${title}`}
    >
      <div class="absolute inset-0 bg-black opacity-0 transition-opacity duration-300"></div>

      <h2 class="absolute inset-x-0 bottom-0 p-4 text-xl font-bold text-center text-white bg-gradient-to-t from-black/80 via-black/40 to-transparent">
        {title}
      </h2>
    </div>

    <div class="description-content bg-white/80 p-4 text-gray-800 flex items-center justify-center text-center
                 max-h-0 opacity-0 overflow-hidden
                 transition-[max-height,opacity] duration-500 ease-in-out">
      <p class="text-md text-justify leading-relaxed">{description}</p>
    </div>

  </div>
</div>

